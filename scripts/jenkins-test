#!/usr/bin/env bash

set -e -x

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PROJECT_ROOT="$DIR/.."

VERSION=$(grep "<version>" "$PROJECT_ROOT/pom.xml"  | head -2 | tail -1 | sed 's/ *<version>//g' | sed 's/<\/version>//g')
echo "Testing ADAM version $VERSION"

ADAM_TMP_DIR=$(mktemp -d -t "adamTestXXXXXXX")
# Just to be paranoid.. use a directory internal to the ADAM_TMP_DIR
ADAM_TMP_DIR="$ADAM_TMP_DIR/deleteMePleaseThisIsNoLongerNeeded"
mkdir $ADAM_TMP_DIR

pushd "$PROJECT_ROOT"
# Copy the jar into our temp space for testing
cp adam-cli/target/adam-$VERSION.jar $ADAM_TMP_DIR
popd

ADAM="java -Xmx1g -jar adam-$VERSION.jar "

pushd $ADAM_TMP_DIR
echo "Fetching BAM file"
BAM=mouse_chrM.bam
READS=$BAM.reads
PILEUPS=$BAM.pileup
wget http://www.cs.berkeley.edu/~massie/bams/$BAM
echo "Converting BAM to ADAM read format"
$ADAM bam2adam -samtools_validation lenient $BAM $READS
echo "Converting BAM to ADAM read format with sorting"
$ADAM transform -sort_reads $READS $READS.sorted
echo "Converting read file to pileup format"
$ADAM reads2ref $READS $PILEUPS
echo "Reading reads"
$ADAM print $READS 1>/dev/null 2>/dev/null
$ADAM flagstat $READS
rm -rf $ADAM_TMP_DIR
popd

pushd "$PROJECT_ROOT"
./scripts/format-source
if grep --quiet "dirty" <(git describe --dirty --tags)
then
        echo "Please run './scripts/format-source'"
        exit 1
fi
popd

echo
echo "All the tests passed"
echo
